<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dQAAAABJRU5ErkJggg==
</value>
  </data>
</root>